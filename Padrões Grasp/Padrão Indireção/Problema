// introduz um intermediário pra delegar responsabilidades a outros componentes ou serviços
// reduz acoplamente direto entre classes, facilitando mudanças e a evolução do sistema
// o intermediario como mediador controla a comunicação entre classes separando diretamente suas responsabilidades
// flexibilidade de desing
// redução de acoplamento
// facilidade de evoluçãop

// pode solucionar problemas como comunicação entre objetos remotos sem lidar com sockets, serialização etc; 
// utilização de API de terceiros isolando o objeto das diferentes apis de diversos fornecedores; 
// abstração de tecnologia em caso de mudança da mesma, sem interferir nos modilos clientes;
// redução do acoplamento